% access original rgb image
rgb = imread('img1.jpg');
imshow(rgb);

% grayscale
gray = rgb2gray(rgb);
threshold = graythresh(gray);
figure, imshow(gray)

% binary image
bw = im2bw(gray, threshold);
figure, imshow(bw)

% remove all objects with < 30 px
bw1 = bwareaopen(bw, 200);
figure, imshow(bw1)

% fill gap
se = strel('disk', 2); 
bw2 = imclose(bw1, se);
figure, imshow(bw2);

% fill any holes
bw3 = imfill(bw2, 'holes');
figure, imshow(bw3)
% get px for boundaries of each object
[B,L] = bwboundaries(bw3, 'noholes');
% L = label matrix - try imtool(L) and imshow(L)

% display L and draw each boundary
imshow(label2rgb(L, @jet, [.5 .5 .5]))
hold on % allow graphics to be added to same plot

for k = 1 : length(B) % length(B) = number of objects
boundary = B{k}; % B = cell data type (set)
plot(boundary(:,2), boundary(:,1), 'w', 'LineWidth',2)
End

% find area in px and centroid (x,y) for each object in L
stats = regionprops(L, 'Area', 'Centroid');

% arbitrary value (change as needed)
threshold = 0.1;

% loop over each object (each object has a boundary)
roundObjects = 0;
for k = 1 : length(B)
boundary = B{k};
delta_sq = diff(boundary).^2;
perimeter = sum(sqrt(sum(delta_sq, 2)));
area = stats(k).Area;
metric = (4 * pi * area) / perimeter^2; 
if metric > threshold
centroid = stats(k).Centroid;
plot(centroid(1), centroid(2),'ko');
roundObjects = roundObjects + 1;
end
text(boundary(1,2)-35,boundary(1,1)+13,metric_string,'Color','y','FontSize',14,'FontWeight','bold')
end
% list total number of objects
fprintf('Total number of objects: %d\n', length(B));
% list total number of round objects (using threshold)
fprintf('Total number of round objects: %d\n', roundObjects)
